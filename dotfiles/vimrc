" Plugins for nvim
if has('nvim')
  lua require('gitsigns').setup()
  set signcolumn=yes " always show the sign column
endif

" Put leader key under the thumb
nnoremap <Space> <NOP>
let mapleader = "\<Space>"

" General configuration
set path+=** " recursively add contents of current directory to path
set list " show invisible characters such as tabs and trailing spaces
set number relativenumber " show relative line numbers except for current line
set ignorecase smartcase " ignore case unless search patterns contains capitals
set showcmd " show commands as they're being typed
set hidden " allow switching buffers without saving
set hlsearch " search highlighting on
set undofile " persistent undo
set mouse=a " enable mouse in all modes

" Easier access to frequent commands
nnoremap <leader><leader> <cmd>Telescope buffers<Return>
nnoremap <leader>t <cmd>Telescope buffers<Return>
nnoremap <leader>bd :bd<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>Q :q!<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>x :x<CR>
nnoremap <leader>f <cmd>Telescope find_files<Return>
nnoremap <leader>r <cmd>Telescope live_grep<Return>
nnoremap <leader>* <cmd>Telescope grep_string<Return>
nnoremap <leader>c :close<CR>
nnoremap <leader>m :make<CR>
nnoremap <leader>e :

" Git commands
nnoremap <silent> s :Git<CR><bar>:normal gUk=<CR>
nnoremap <leader>g<space> :Git 
nnoremap <leader>gb :Git blame<CR>
nnoremap <leader>gd :Gvdiffsplit<CR>
nnoremap <leader>go :GBrowse<CR>
nnoremap <leader>gp :Git<CR>:Git push 
nnoremap <leader>gy :GBrowse!<CR>
vnoremap <leader>gy :GBrowse!<CR>

" Terraform setup
let g:terraform_align=1
let g:terraform_fmt_on_save=1
let g:terraform_fold_sections=1

" Page up/down without moving the cursor
nnoremap <C-u> 10<C-y>
nnoremap <C-d> 10<C-e>

" Line wrapping
set wrap " enable soft-wrapping
set linebreak " don't soft-wrap mid-word
set breakindent " continue indentation of soft-wrapped line
set showbreak=\\\  " prefix soft-wrapped lines with a backslash
set textwidth=80 " column to hard-wrap at (with gq for example)
set formatoptions-=tc " don't automatically hard-wrap text or comments

" Use tabs for indentation and spaces for alignment.
" This ensures everything will line up independent of tab size.
" - https://suckless.org/coding_style
" - https://vim.fandom.com/wiki/VimTip1626
set noexpandtab copyindent preserveindent softtabstop=0 shiftwidth=2 tabstop=2

" Spellchecking
" Vim offers suggestions! See `:help z=` and `:help i^xs`...
set nospell " off by default
set spelllang=en_gb
nnoremap <leader>s 1z=

" Colours
syntax enable
colorscheme onehalflight
highlight Normal guibg=NONE ctermbg=NONE
highlight LineNr guibg=NONE ctermbg=NONE
highlight GitGutterAdd ctermbg=NONE guibg=NONE
highlight GitGutterChange ctermbg=NONE guibg=NONE
highlight GitGutterChangeDelete ctermbg=NONE guibg=NONE
highlight GitGutterDelete ctermbg=NONE guibg=NONE

" Keep vim files organised
" Adapted from https://github.com/tpope/dotfiles/blob/master/.vimrc
if !has('nvim')
  if !empty($SUDO_USER) && $USER !=# $SUDO_USER
    setglobal viminfo=
    setglobal directory-=~/tmp
    setglobal backupdir-=~/tmp
  elseif exists('+undodir')
    let s:data_home = expand('~/.local/share/vim/')
    let &undodir = s:data_home . 'undo//'
    let &directory = s:data_home . 'swap//'
    let &backupdir = s:data_home . 'backup//'
    if !isdirectory(&undodir) | call mkdir(&undodir, 'p') | endif
    if !isdirectory(&directory) | call mkdir(&directory, 'p') | endif
    if !isdirectory(&backupdir) | call mkdir(&backupdir, 'p') | endif
  endif
endif

" Copy/paste with system clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
nnoremap <leader>y "+Y
vnoremap <leader>p "+p
vnoremap <leader>y "+y
vnoremap <C-c> "+y
